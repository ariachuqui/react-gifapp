{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","Helpers/GetGif.js","Components/GifContainer.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","c","type","value","onChange","target","placeholder","GifGridItem","imagen","title","className","src","alt","getGif","category","a","url","encodeURI","fetch","res","json","data","map","g","id","images","downsized_medium","GifContainer","setImages","useEffect","then","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KA8BeA,EA5BK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgBzC,OACI,0BAAMC,SAbQ,SAACC,GACfA,EAAEC,iBAEFN,GAAc,SAAAO,GAAC,OAAML,GAAN,mBAAqBK,OACpCJ,EAAc,MAUV,2BAAQK,KAAO,OACPC,MAAUP,EACVQ,SATM,SAACL,GAAD,OAAOF,EAAeE,EAAEM,OAAOF,QAUrCG,YAAc,sBCdnBC,EAPK,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,MAAV,OACZ,yBAAKC,UAAU,OACX,2BAAID,GACJ,yBAAKE,IAAMH,EAASI,IAAMH,M,uBCHvBI,EAAM,uCAAG,WAAQC,GAAR,qBAAAC,EAAA,6DACdC,EADc,0DAEiCC,UAAUH,GAF3C,sDAIFI,MAAMF,GAJJ,cAIdG,EAJc,gBAKGA,EAAIC,OALP,uBAKZC,EALY,EAKZA,KALY,kBAObA,EAAKC,KAAI,SAACC,GACf,MAAO,CACLC,GAAID,EAAEC,GACNf,MAAOc,EAAEd,MACTD,OAAQe,EAAEE,OAAOC,iBAAiBV,SAXlB,2CAAH,sDCqBNW,EAnBM,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,EAETnB,mBAAS,IAFA,mBAE9B8B,EAF8B,KAEtBG,EAFsB,KAIrCC,qBAAU,WACRhB,EAAOC,GAAUgB,KAAKF,KACrB,CAACd,IAKJ,OACE,oCACE,4BAAKA,GACL,yBAAKJ,UAAU,oBAAf,IALFe,EAAOH,KAAI,SAACS,GAAD,OAAS,kBAAC,EAAD,eAAaC,IAAKD,EAAIP,IAAQO,OAKhD,OCASE,EAdM,WAAO,IAAD,EACWtC,mBAAS,IADpB,mBAClBuC,EADkB,KACNxC,EADM,KAIzB,OACE,oCACE,4CACA,yBAAKgB,UAAU,QACf,kBAAC,EAAD,CAAahB,cAAeA,IAC5B,6BAN4BwC,EAAWZ,KAAI,SAACrB,GAAD,OAAO,kBAAC,EAAD,CAAe+B,IAAQ/B,EAAIa,SAAYb,U,MCD/FkC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6b7a2d33.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleAdd = (e) => {\n        e.preventDefault();\n        \n        setCategories(c => [ inputValue, ...c, ]);\n        setInputValue('');\n    }\n\n    const handleChanges = (e) => setInputValue( e.target.value );\n\n        \n    \n\n    return (\n        <form onSubmit = { handleAdd }>\n            <input  type = \"text\" \n                    value = { inputValue }\n                    onChange = { handleChanges }\n                    placeholder = \"Busque en Giphy\"\n                    />\n            \n        </form>\n    )\n}\n\nexport default AddCategory\n","import React from 'react'\n\nconst GifGridItem = ({imagen, title}) =>\n        <div className=\"gif\">\n            <p>{title}</p>\n            <img src={ imagen } alt={ title }/>\n        </div>;\n\n\nexport default GifGridItem\n","\n\n  export const getGif = async ( category ) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=OaK76Xy9CR4h40Y2Jk7844BpVYds1lSf`;\n\n    const res = await fetch(url);\n    const { data } = await res.json();\n\n    return data.map((g) => {\n      return {\n        id: g.id,\n        title: g.title,\n        imagen: g.images.downsized_medium.url,\n      };\n    });\n\n    \n  };","import React, { useEffect, useState } from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport { getGif } from \"../Helpers/GetGif\";\n\nconst GifContainer = ({ category }) => {\n\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    getGif(category).then(setImages);\n  }, [category]);\n\n  const mostrar = () =>\n    images.map((img) => <GifGridItem key={img.id} {...img} />);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      <div className=\"GifGridContainer\"> {mostrar()} </div>\n    </>\n  );\n};\n\nexport default GifContainer;\n","import React, { useState } from \"react\";\nimport AddCategory from \"./Components/AddCategory\";\nimport GifContainer from \"./Components/GifContainer\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([]);\n\n  const mostrarCategories = () => categories.map((c) => <GifContainer  key = { c } category = {c} />);\n  return (\n    <>\n      <h1>GifExpertApp</h1>\n      <div className=\"sub\"></div>\n      <AddCategory setCategories={setCategories} />\n      <div>{mostrarCategories()}</div>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './style.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}